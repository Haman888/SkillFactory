{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Настройки\n",
    "from telegram.ext import Updater, CommandHandler, MessageHandler, Filters\n",
    "import apiai, json\n",
    "updater = Updater(token='Вставьте сюда свой токен Telegram) # Токен API к Telegram\n",
    "dispatcher = updater.dispatcher"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Обработка команд\n",
    "def startCommand(bot, update):\n",
    "    bot.send_message(chat_id=update.message.chat_id, text='Привет, давай пообщаемся?')\n",
    "def textMessage(bot, update):\n",
    "    request = apiai.ApiAI('Вставьте сюда свой токен Dialogflow').text_request() # Токен API к Dialogflow\n",
    "    request.lang = 'ru' # На каком языке будет послан запрос\n",
    "    request.session_id = 'BatlabAIBot' # ID Сессии диалога (нужно, чтобы потом учить бота)\n",
    "    request.query = update.message.text # Посылаем запрос к ИИ с сообщением от юзера\n",
    "    responseJson = json.loads(request.getresponse().read().decode('utf-8')) #грузим в json \n",
    "    response = responseJson['result']['fulfillment']['speech'] # Разбираем JSON и вытаскиваем ответ\n",
    "    # Если есть ответ от бота - присылаем юзеру, если нет - бот его не понял\n",
    "    if response:\n",
    "        bot.send_message(chat_id=update.message.chat_id, text=response)\n",
    "    else:\n",
    "        bot.send_message(chat_id=update.message.chat_id, text='Я Вас не совсем понял!')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Хендлеры\n",
    "start_command_handler = CommandHandler('start', startCommand)\n",
    "text_message_handler = MessageHandler(Filters.text, textMessage)\n",
    "# Добавляем хендлеры в диспетчер\n",
    "dispatcher.add_handler(start_command_handler)\n",
    "dispatcher.add_handler(text_message_handler)\n",
    "# Начинаем поиск обновлений\n",
    "updater.start_polling(clean=True)\n",
    "# Останавливаем бота, если были нажаты Ctrl + C\n",
    "updater.idle()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
